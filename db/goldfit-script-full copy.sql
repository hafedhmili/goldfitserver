-- MySQL Script generated by MySQL Workbench
-- Tue Mar 15 20:04:35 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
-- SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
-- SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION;

-- -----------------------------------------------------
-- Schema GoldFit
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS GoldFit ;

-- -----------------------------------------------------
-- Schema GoldFit
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS GoldFit ;
-- SHOW WARNINGS;
-- USE GoldFit ;

-- -----------------------------------------------------
-- Table GoldFit.Program
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.Program ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.Program (
  idProgram SMALLINT NOT NULL,
  ProgramName VARCHAR(45) NOT NULL,
  ProgramDescription VARCHAR(320) NOT NULL,
  ProgramDuration INT NOT NULL,
  PRIMARY KEY (idProgram));
--ENGINE = InnoDB;

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.Exercice
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.Exercice ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.Exercice (
  idExercice SMALLINT NOT NULL,
  ExerciceName VARCHAR(45) NOT NULL,
  ExerciceDescription VARCHAR(320) NOT NULL,
  ExerciceNumberRepetitionsMin INT NOT NULL DEFAULT 0,
  ExerciceNumberRepetitionsMax INT NOT NULL DEFAULT 0,
  ExerciceDescriptionURL VARCHAR(45) NULL,
  PRIMARY KEY (idExercice));
--ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE UNIQUE INDEX ExerciceName_UNIQUE ON GoldFit.Exercice (ExerciceName ASC);

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.ExerciceSeries
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.ExerciceSeries ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.ExerciceSeries (
  idExerciceSeries SMALLINT NOT NULL ,
  ExerciceSeriesName VARCHAR(45) NOT NULL,
  ExerciceSeriesDescription VARCHAR(320) NULL,
  PRIMARY KEY (idExerciceSeries));
--ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE UNIQUE INDEX ExerciceSeriesName_UNIQUE ON GoldFit.ExerciceSeries (ExerciceSeriesName ASC);

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.ProgramExerciceSeries
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.ProgramExerciceSeries ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.ProgramExerciceSeries (
  ProgramExerciceSeriesId SMALLINT NOT NULL,
  ProgramId SMALLINT NOT NULL,
  ExerciceSeriesId SMALLINT NOT NULL,
  startDay INT NOT NULL,
  endDay INT NOT NULL,
  PRIMARY KEY (ProgramExerciceSeriesId),
  CONSTRAINT fk_programId
    FOREIGN KEY (ProgramId)
    REFERENCES GoldFit.Program (idProgram)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_exercise_series_id
    FOREIGN KEY (ExerciceSeriesId)
    REFERENCES GoldFit.ExerciceSeries (idExerciceSeries)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
--ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE INDEX fk_programId_idx ON GoldFit.ProgramExerciceSeries (ProgramId ASC);

--SHOW WARNINGS;
CREATE INDEX fk_exercise_series_id_idx ON GoldFit.ProgramExerciceSeries (ExerciceSeriesId ASC);

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.ExerciceSeriesExercice
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.ExerciceSeriesExercice ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.ExerciceSeriesExercice (
  idExerciceSeriesExercise SMALLINT NOT NULL,
  ExerciceSeriesId SMALLINT NOT NULL,
  ExerciceId SMALLINT NOT NULL,
  ExerciseOrder INT NOT NULL,
  ExerciceNumberSeriesMin INT NOT NULL DEFAULT 0,
  ExerciceNumberSeriesMax INT NOT NULL,
  PRIMARY KEY (idExerciceSeriesExercise),
  CONSTRAINT fk_ExerciseId
    FOREIGN KEY (ExerciceId)
    REFERENCES GoldFit.Exercice (idExercice)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ExerciseSeriesId
    FOREIGN KEY (ExerciceSeriesId)
    REFERENCES GoldFit.ExerciceSeries (idExerciceSeries)
    ON DELETE NO ACTION
    ON UPDATE CASCADE);
--ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE INDEX fk_ExerciseId_idx ON GoldFit.ExerciceSeriesExercice (ExerciceId ASC);

--SHOW WARNINGS;
CREATE INDEX fk_ExerciseSeriesId_idx ON GoldFit.ExerciceSeriesExercice (ExerciceSeriesId ASC);

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.Patient
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.Patient ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.Patient (
  idPatient SMALLINT NOT NULL,
  PatientFirstName VARCHAR(45) NOT NULL,
  PatientLastName VARCHAR(45) NOT NULL,
  PRIMARY KEY (idPatient));
--ENGINE = InnoDB;

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.ProgramEnrollment
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.ProgramEnrollment ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.ProgramEnrollment (
  idProgramEnrollment SMALLINT NOT NULL,
  PatientId SMALLINT NOT NULL,
  ProgramId SMALLINT NOT NULL,
  ProgramEnrollmentDate DATE NOT NULL,
  ProgramStartDate DATE NOT NULL,
  ProgramEnrollmentCode VARCHAR(45) NOT NULL,
  PRIMARY KEY (idProgramEnrollment),
  CONSTRAINT fk_patient_Id
    FOREIGN KEY (PatientId)
    REFERENCES GoldFit.Patient (idPatient)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_program_id
    FOREIGN KEY (ProgramId)
    REFERENCES GoldFit.Program (idProgram)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
--ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE UNIQUE INDEX ProgramEnrollmentCode_UNIQUE ON GoldFit.ProgramEnrollment (ProgramEnrollmentCode ASC);

--SHOW WARNINGS;
CREATE INDEX fk_program_id_idx ON GoldFit.ProgramEnrollment (ProgramId ASC);

--SHOW WARNINGS;
CREATE INDEX fk_patient_Id_idx ON GoldFit.ProgramEnrollment (PatientId ASC);

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.ProgramDayRecord
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.ProgramDayRecord ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.ProgramDayRecord (
  idProgramDayRecord SMALLINT NOT NULL,
  date DATE NOT NULL,
  ProgramEnrollmentId SMALLINT NOT NULL,
  PRIMARY KEY (idProgramDayRecord),
  CONSTRAINT fk_program_enrollment
    FOREIGN KEY (ProgramEnrollmentId)
    REFERENCES GoldFit.ProgramEnrollment (idProgramEnrollment)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
-- ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE UNIQUE INDEX date_UNIQUE ON GoldFit.ProgramDayRecord (date ASC) ;

--SHOW WARNINGS;
CREATE INDEX fk_program_enrollment_idx ON GoldFit.ProgramDayRecord (ProgramEnrollmentId ASC) ;

--SHOW WARNINGS;

-- -----------------------------------------------------
-- Table GoldFit.ExerciceRecord
-- -----------------------------------------------------
DROP TABLE IF EXISTS GoldFit.ExerciceRecord ;

--SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS GoldFit.ExerciceRecord (
  idExerciceRecord SMALLINT NOT NULL,
  numberSeries SMALLINT NOT NULL DEFAULT 0,
  numberRepetitions SMALLINT NOT NULL DEFAULT 0,
  ProgramDayRecordId SMALLINT NOT NULL,
  ExerciceId SMALLINT NOT NULL,
  PRIMARY KEY (idExerciceRecord),
  CONSTRAINT fk_program_day_record
    FOREIGN KEY (ProgramDayRecordId)
    REFERENCES GoldFit.ProgramDayRecord (idProgramDayRecord)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_exerice
    FOREIGN KEY (ExerciceId)
    REFERENCES GoldFit.Exercice (idExercice)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
--ENGINE = InnoDB;

--SHOW WARNINGS;
CREATE INDEX fk_program_day_record_idx ON GoldFit.ExerciceRecord (ProgramDayRecordId ASC) ;

--SHOW WARNINGS;
CREATE INDEX fk_exerice_idx ON GoldFit.ExerciceRecord (ExerciceId ASC) ;

--SHOW WARNINGS;

-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table GoldFit.Program
-- -----------------------------------------------------
START TRANSACTION;
-- USE GoldFit;
INSERT INTO GoldFit.Program (idProgram, ProgramName, ProgramDescription, ProgramDuration) VALUES (1, 'PACE', 'This is the PACE program', 60);
INSERT INTO GoldFit.Program (idProgram, ProgramName, ProgramDescription, ProgramDuration) VALUES (2, 'PATH', 'This is the PATH program', 60);

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.Exercice
-- -----------------------------------------------------
START TRANSACTION;
-- USE GoldFit;
INSERT INTO GoldFit.Exercice (idExercice, ExerciceName, ExerciceDescription, ExerciceNumberRepetitionsMin, ExerciceNumberRepetitionsMax, ExerciceDescriptionURL) VALUES (1, 'Sit-Ups', 'These are sit-ups', 10, 30, 'https://youtu.be/ojByzJhwVFE');
INSERT INTO GoldFit.Exercice (idExercice, ExerciceName, ExerciceDescription, ExerciceNumberRepetitionsMin, ExerciceNumberRepetitionsMax, ExerciceDescriptionURL) VALUES (2, 'Lie Down', 'Not as easy as it seems', 40, 50, 'https://youtu.be/LdwS6zf94Wg');
INSERT INTO GoldFit.Exercice (idExercice, ExerciceName, ExerciceDescription, ExerciceNumberRepetitionsMin, ExerciceNumberRepetitionsMax, ExerciceDescriptionURL) VALUES (3, 'Sleeping', 'Don\"t laugh', 50, 60, 'https://youtu.be/ojByzJhwVFE');

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.ExerciceSeries
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.ExerciceSeries (idExerciceSeries, ExerciceSeriesName, ExerciceSeriesDescription) VALUES (1, 'SeriesOne', 'Consists of exercice 1 (sit-ups) and 2 (lie downs) a few times');
INSERT INTO GoldFit.ExerciceSeries (idExerciceSeries, ExerciceSeriesName, ExerciceSeriesDescription) VALUES (2, 'SeriesTwo', 'Consists of exercice 1 (sit-ups) and 3 (sleeping)');
INSERT INTO GoldFit.ExerciceSeries (idExerciceSeries, ExerciceSeriesName, ExerciceSeriesDescription) VALUES (3, 'SeriesThree', 'Consists of exercices 1, 2, and 3');

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.ProgramExerciceSeries
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.ProgramExerciceSeries (ProgramExerciceSeriesId, ProgramId, ExerciceSeriesId, startDay, endDay) VALUES (1, 1, 3, 1, 60);
INSERT INTO GoldFit.ProgramExerciceSeries (ProgramExerciceSeriesId, ProgramId, ExerciceSeriesId, startDay, endDay) VALUES (2, 2, 1, 1, 19);
INSERT INTO GoldFit.ProgramExerciceSeries (ProgramExerciceSeriesId, ProgramId, ExerciceSeriesId, startDay, endDay) VALUES (3, 2, 2, 20, 39);
INSERT INTO GoldFit.ProgramExerciceSeries (ProgramExerciceSeriesId, ProgramId, ExerciceSeriesId, startDay, endDay) VALUES (4, 2, 3, 40, 60);

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.ExerciceSeriesExercice
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (1, 1, 1, 1, 2, 3);
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (2, 1, 2, 2, 3, 4);
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (3, 2, 1, 1, 2, 4);
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (4, 2, 3, 2, 2, 5);
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (5, 3, 1, 1, 2, 4);
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (6, 3, 2, 2, 4, 5);
INSERT INTO GoldFit.ExerciceSeriesExercice (idExerciceSeriesExercise, ExerciceSeriesId, ExerciceId, ExerciseOrder, ExerciceNumberSeriesMin, ExerciceNumberSeriesMax) VALUES (7, 3, 3, 3, 3, 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.Patient
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.Patient (idPatient, PatientFirstName, PatientLastName) VALUES (1, 'Mylène', 'Aubertin');
INSERT INTO GoldFit.Patient (idPatient, PatientFirstName, PatientLastName) VALUES (2, 'Hafedh', 'Mili');

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.ProgramEnrollment
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.ProgramEnrollment (idProgramEnrollment, PatientId, ProgramId, ProgramEnrollmentDate, ProgramStartDate, ProgramEnrollmentCode) VALUES (1, 1, 1, '2022-03-13', '2022-03-13', 'MAL-01');
INSERT INTO GoldFit.ProgramEnrollment (idProgramEnrollment, PatientId, ProgramId, ProgramEnrollmentDate, ProgramStartDate, ProgramEnrollmentCode) VALUES (2, 2, 2, '2022-03-14', '2022-04-01', 'HM-01');

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.ProgramDayRecord
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.ProgramDayRecord (idProgramDayRecord, date, ProgramEnrollmentId) VALUES (1, '2022-04-01', 2);
INSERT INTO GoldFit.ProgramDayRecord (idProgramDayRecord, date, ProgramEnrollmentId) VALUES (2, '2022-04-02', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table GoldFit.ExerciceRecord
-- -----------------------------------------------------
START TRANSACTION;
--USE GoldFit;
INSERT INTO GoldFit.ExerciceRecord (idExerciceRecord, numberSeries, numberRepetitions, ProgramDayRecordId, ExerciceId) VALUES (1, 3, 10, 1, 1);
INSERT INTO GoldFit.ExerciceRecord (idExerciceRecord, numberSeries, numberRepetitions, ProgramDayRecordId, ExerciceId) VALUES (2, 2, 8, 1, 2);
INSERT INTO GoldFit.ExerciceRecord (idExerciceRecord, numberSeries, numberRepetitions, ProgramDayRecordId, ExerciceId) VALUES (3, 3, 10, 2, 1);
INSERT INTO GoldFit.ExerciceRecord (idExerciceRecord, numberSeries, numberRepetitions, ProgramDayRecordId, ExerciceId) VALUES (4, 2, 8, 2, 2);

COMMIT;
